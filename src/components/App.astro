---
import '@/styles/app.css'
import PromptArea from '@/components/PromptArea.astro'
import ResultArea from '@/components/ResultArea.astro'
import AdMiddle from '@/components/AdMiddle.astro'
---
<section id="app">
    <PromptArea />
    <div class="middle">
        <AdMiddle />
        <button id="converter"></button>
        <AdMiddle />
    </div>
    <ResultArea aspect_ratio='16/9'/>
</section>

<style>
    .middle {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: auto auto auto;
        height: 100%;
        /* background-color: crimson; */
        flex-grow: 1;
    }

    button {
        place-self: center;
        align-items: center;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        background-color: #fcd200ef;
        background-image: url('https://icons.veryicon.com/png/o/miscellaneous/rookie-30-official-icon-library/button-arrow-right-1.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        cursor: pointer;
        outline: none; 
        transition: background-color 0.3s, transform 0.3s;
    }

    button:active {
        background-color: #FCD000;
        transform: scale(0.9);
    }
</style>

<script>
    // FunciÃ³n auto-invocada para poder hacer 'return' en Astro
    (function() {
        const $ = (selector: string): Element | null => document.querySelector(selector)

        const $btnConverter = $('#converter') as HTMLButtonElement
        const $promptInput = $('#prompt-input') as HTMLTextAreaElement
        const $image = $('#result-image') as HTMLImageElement

        if (!$btnConverter || !$promptInput || !$image) return

        $btnConverter.addEventListener('click', () => {
            fetch('http://127.0.0.1:5000/get-plot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ python_code: $promptInput.value }),
            })
            .then(response => response.json())
            .then(data => {
                const imgBase64 = data.image_base64
                $image.src = `data:image/png;base64,${imgBase64}`
            })
            .catch(error => console.error('Error fetching the plot:', error))
        })
    })()
</script>